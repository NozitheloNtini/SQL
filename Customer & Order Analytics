-- #Project Title: Customer & Order Analytics
-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 
--Note that some queries contain the filter "WHERE length(orderid) = 6 AND orderid <> 'Order ID'". The order id column has some unclean data, that's why we use the filters clean out. So queries that don't use the filters are because the queries do not contain order id.


-- Orders placed in January
SELECT COUNT(orderid) AS orders
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';
-- This query answers the question, "How many orders were placed in January?"


-- iPhone orders
SELECT COUNT(orderid) AS iPhone_orders
FROM BIT_DB.JanSales
WHERE Product = 'iPhone' 
AND length(orderid) = 6
AND orderid <> 'Order ID';
-- This query answers the question, "How many of the above orders were for an iPhone?" 


-- Account numbers for February orders
SELECT distinct custo.acctnum
FROM  BIT_DB.FebSales febs
INNER JOIN BIT_DB.customers custo
ON febs.orderID = custo.order_id  
WHERE length(orderid) = 6
AND orderid <> 'Order ID';
-- This query will display customer account numbers for all the orders that were placed in February.


-- Cheapest order in January
SELECT distinct Product, MIN (price) AS price
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY price
LIMIT 1;
-- This query answers the question, "Which product was the cheapest one sold in January, and what was the price?"


-- January Revenue
SELECT product, SUM(quantity)*price as Revenue
FROM BIT_DB.JanSales
GROUP BY product;
-- This query answers the question, "What is the total revenue for each product sold in January?"


-- Products sold to a certain address 
SELECT product, quantity, SUM(quantity)*price AS total_revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';
-- This query answers the question, "Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?"


-- Orders in February and amount spent
SELECT COUNT(distinct custo.acctnum) AS number_of_customers,
avg(quantity*price) AS avg_spent
FROM BIT_DB.FebSales Febs
LEFT JOIN BIT_DB.customers custo
ON Febs.orderid=custo.order_id
WHERE Febs.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';
-- This query answers the question, "How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?"


-- Los Angeles products
SELECT product, SUM(quantity) AS total_sold
FROM BIT_DB.FebSales
WHERE location LIKE '%los Angeles%'
GROUP BY product;

-- This query will list all the products sold in Los Angeles in February, and includes how many of each were sold.


-- New York orders
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>=3;
-- This query answers the question, "Which locations in New York received at least 3 orders in January, and how many orders did they each receive?"

--Headphone sales in February
SELECT product, SUM (quantity) AS total_sold
FROM BIT_DB.FebSales
WHERE product LIKE '%headphone%'
GROUP BY product;
-- This query answers the question, "How many of each type of headphone were sold in February?"


--Avergae spent in February
SELECT AVG (quantity*price) AS average_spent
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON Feb.orderID = cust.order_id  
WHERE length(orderid) = 6
AND orderid <> 'Order ID';
-- This query answers the question, "What was the average amount spent per account in February?"


-- Average bought in February
SELECT SUM(quantity)/COUNT(cust.acctnum) AS average_quantity
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON Feb.orderID = cust.order_id  
WHERE length(orderid) = 6
AND orderid <> 'Order ID';
-- This query answers the question, "What was the average quantity of products purchased per account in February?"


-- Product bringing most revenue in January
SELECT product, SUM(quantity*price) AS revenue
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) DESC
LIMIT 1;
-- This query answers the question, "Which product brought in the most revenue in January and how much revenue did it bring in total?"


-- #Technologies Used:
-- 1. SQL
-- 2. SQLiteStudio

-- #Conclusion: This project analyses a store database. I used SQL queries to see which items are most ordered amd how much money they bring to the store. The different tables aid in providing easier analysis of different months
